{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1RQloWc5tedsD9ILUJcUoZon_8JlnA6h0","authorship_tag":"ABX9TyPcujgi0H45Do0xegzGAhbF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rsuKEdl8j2oL","executionInfo":{"status":"ok","timestamp":1725315823257,"user_tz":240,"elapsed":1922,"user":{"displayName":"negar akbarpouran badr","userId":"02768242618774816010"}},"outputId":"1b571689-ad8a-42e6-dbe5-490a8a12c56f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-15-536fa616e53b>:24: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_filtered['trump_mention'] = df_filtered['content'].apply(trump_finder)\n"]},{"output_type":"stream","name":"stdout","text":["4802\n","108\n","2.2490628904623073\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","\n","import pandas as pd\n","\n","# read first 10000 lines\n","df = pd.read_csv('/content/drive/MyDrive/Comp-370/IRAhandle_tweets_1.csv', nrows = 10000)\n","\n","\n","# filter the english and non-questions\n","df_filtered = df[(df['language'] == 'English') & (~df['content'].str.contains('\\?'))]\n","\n","\n","# # save a formatted tsv file\n","# output_file_path = '/content/drive/MyDrive/Comp-370/filtered_tweets.tsv'\n","# df_filtered.to_csv(output_file_path, sep = '\\t', index = False)\n","\n","# Trump-finder function\n","import re\n","def trump_finder (tweet):\n","  return 'T' if (re.search(r'\\bTrump\\b', tweet)) else 'F'\n","\n","# Create the mention_trump column\n","df_filtered['trump_mention'] = df_filtered['content'].apply(trump_finder)\n","\n","# remove extra cols and save dataset.tsv\n","df_filtered[['tweet_id', 'publish_date', 'content', 'trump_mention']].to_csv('/content/drive/MyDrive/Comp-370/dataset.tsv', sep='\\t', index=False)\n","\n","# Statistics\n","total = len(df_filtered)\n","trump_mentions = len(df_filtered[df_filtered['trump_mention'] == 'T'])\n","print(total)\n","print(trump_mentions)\n","#in percentage\n","result = (trump_mentions / total) * 100\n","print (result)\n","\n","# create the result file:\n","with open ('/content/drive/MyDrive/Comp-370/results.tsv', 'w') as f:\n","  f.write('result\\tvalue\\n')\n","  f.write(f'frac-trump-mentions\\t{result:.3f}\\n')\n","\n","# ReadMe file\n","with open ('/content/drive/MyDrive/Comp-370/README.md', 'w') as rm:\n","  rm.write('I think since the retweets are technically considered a different tweet \\\n","  as they are given a separate tweet ID, they are being doubly counted; to fix this we should consider the column : retweet')\n","\n","#print(df_filtered)\n","\n"]}]}